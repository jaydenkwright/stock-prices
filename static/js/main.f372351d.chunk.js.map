{"version":3,"sources":["components/Stock.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Stock","stockTitle","paddingTop","fontFamily","fontSize","color","transition","marginBottom","stockInfo","margin","stockNewsBox","backgroundColor","borderRadius","padding","openClosePrice","style","this","props","data","symbol","companyName","className","iexRealtimePrice","open","latestPrice","primaryExchange","close","news","title","description","Component","Home","state","fetch","stockName","process","then","res","json","result","setState","articles","document","body","App","stockData","query","stockNews","isSearching","isLoading","onChange","e","target","value","search","evt","key","type","placeholder","onKeyPress","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f372351d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Stock extends Component {\n\n    stockTitle = {\n        paddingTop: \"0em\",\n        fontFamily: 'Montserrat',\n        fontSize: \"3em\",\n        color: \"#e0e0e0\",\n        transition: \"0.4s ease-in\",\n        marginBottom: \"1em\",\n    }\n\n    stockInfo = {\n        fontFamily: 'Montserrat',\n        fontSize: \"3em\",\n        color: \"#e0e0e0\",\n        margin: \"0em\"\n    }\n\n    stockNewsBox = {\n        margin: \"1em\",\n        backgroundColor: \"#39c9a0\",\n        borderRadius: \"8px 8px 8px 8px\",\n        color: \"#e0e0e0\",\n        padding: \"0.5em\",\n        transition: \"0.9s ease-out\"\n    }\n\n    openClosePrice = {\n        padding: \"1em\",\n        fontFamily: 'Montserrat',\n        fontSize: \"2em\",\n        color: \"#e0e0e0\",\n        margin: \"0em\"\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={this.stockTitle}>\n                        <h1>{this.props.data.symbol}</h1>\n                        <h5> { this.props.data.companyName } </h5>\n                    </div>\n                    <div className=\"info\">\n                        <h3>\n                            <div className={this.props.data.iexRealtimePrice < this.props.data.open ? 'downPrice' : ''}> \n                                ${this.props.data.iexRealtimePrice !== 0 ? this.props.data.iexRealtimePrice : this.props.data.latestPrice}\n                            </div>\n                        </h3>\n                        <h5>{ this.props.data.primaryExchange }</h5>\n                    </div>\n                    <div style={ this.openClosePrice }>\n                        { this.props.data.open !== null ? \n                        <h5>Open: ${ this.props.data.open}</h5> : \n                        ''}\n                        { this.props.data.close !== null ? \n                        <h5>Close: ${ this.props.data.close}</h5> : \n                        ''}\n                    </div>\n                    <div style={this.stockNewsBox}>\n                        <h3>News</h3>\n                        <h4>{ this.props.news.title} </h4>\n                        <p>{ this.props.news.description}</p>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Stock\n","import React, { Component } from 'react'\n\nclass Home extends Component {\n    state = {\n        data: [],\n        news: []\n    }\n    componentDidMount(){\n        fetch(`https://cloud.iexapis.com/stable/stock/${this.props.stockName}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    data: result\n                })\n            });\n        fetch(`https://newsapi.org/v2/everything?q=${this.props.stockName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    news: {\n                        title: result.articles[0].title,\n                        description: result.articles[0].description\n                    }\n                })\n            });\n                document.body.style.backgroundColor = \"#f67280\";\n    }\n\n    componentWillUnmount(){\n        document.body.style.backgroundColor = null;\n    }\nrender(){\n        return (\n            <div>\n                <div className=\"infoBox home\">\n                    <div className=\"title home\">\n                        <h3>{this.state.data.symbol}</h3>\n                    </div>\n                    <h4>\n                        <div className=\"info home\">\n                            <p>{this.state.data.companyName}</p>\n                            <p>${this.state.data.latestPrice}</p>\n                            <p>{this.state.data.primaryExchange}</p>\n                        </div>\n                    </h4>\n                    <div className=\"news home\">\n                        <h1>{this.state.news.title}</h1>\n                        <p>{this.state.news.description}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n \nexport default Home","import React, { useState} from 'react';\nimport './App.css';\nimport Stock from './components/Stock'\nimport Home from './components/Home'\n\nclass App extends React.Component {\n// Set default states\n  state = {\n    stockData: [],\n    query: '',\n    stockNews: [],\n    isSearching: false,\n    isLoading: false,\n  }\n  // Function to set text entered into the search box to the query state\n  onChange = (e) => this.setState({ query: e.target.value });\n  search = evt => {\n    // Checks if \"enter\" button has been pressed from search box\n    if( evt.key === \"Enter\"){\n      // Fetches stock data from Iexcloud API using the query state\n      fetch(`https://cloud.iexapis.com/stable/stock/${this.state.query}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          // Sets the stockdata into state\n          this.setState({\n            isLoading: true,\n            stockData: result,\n            isSearching: true,\n          })\n          // Fetches news data from newsapi.org based on the company name\n          fetch(`https://newsapi.org/v2/everything?q=${this.state.stockData.companyName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n              // sets the news data into state\n              this.setState({\n                // news data object\n                stockNews: {\n                  title: result.articles[0].title, \n                  description: result.articles[0].description\n              }\n              })\n            });\n        });\n    }\n  }\n  render(){\n    return (\n      // class changes depending on weather the user is searching or not\n      <div className={this.state.isSearching === false ? \"App home\" : \"App\"}>\n          <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search for a stock symbol... ex: AAPL, TSLA, FB...\"\n            value={this.state.query}\n            onKeyPress={this.search}\n            onChange={this.onChange}\n          />\n          </div>\n          {this.state.isSearching === false ? \n          <div>\n            <Home stockName=\"goog\" />\n            <Home stockName=\"fb\" />\n            <Home stockName=\"snap\" /> \n          </div>\n          : ''}\n          {this.state.isSearching === true ? \n          <Stock data={this.state.stockData} news={this.state.stockNews}/> \n          : ''}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}