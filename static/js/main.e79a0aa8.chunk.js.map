{"version":3,"sources":["components/Stock.module.css","App.module.css","components/Home.module.css","Context/Context.js","components/Stock.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","createContext","stockData","query","stockNews","isSearching","isLoading","Stock","Context","Consumer","context","className","styles","title","symbol","companyName","info","iexRealtimePrice","open","downPrice","latestPrice","primaryExchange","openClosePrice","close","stockNewsBox","description","Home","state","data","news","isLoaded","fetch","this","props","stockName","process","then","res","json","result","setState","articles","document","body","style","backgroundColor","infoBox","Component","App","onChange","e","target","value","search","evt","key","Provider","AppHome","searchBox","type","searchBar","placeholder","onKeyPress","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e79a0aa8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Stock_title__2Yh_U\",\"info\":\"Stock_info__1mza7\",\"downPrice\":\"Stock_downPrice__2jF9G\",\"openClosePrice\":\"Stock_openClosePrice__39caN\",\"stockNewsBox\":\"Stock_stockNewsBox__3qGbc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"AppHome\":\"App_AppHome__2MbBr\",\"searchBox\":\"App_searchBox__2iZoU\",\"searchBar\":\"App_searchBar__3OgeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBox\":\"Home_infoBox__3oj_7\",\"title\":\"Home_title__1ks5w\",\"info\":\"Home_info__2unDC\",\"news\":\"Home_news__3oYsE\"};","import React from 'react'\n\nexport default React.createContext({\n    stockData: [],\n    query: '',\n    stockNews: [],\n    isSearching: false,\n    isLoading: false,\n})","import React, { Component } from 'react'\nimport styles from './Stock.module.css'\nimport Context from '../Context/Context'\nexport function Stock() {    \n        return (\n            <Context.Consumer>\n                {context => (\n                <div>\n                    <div className={styles.title}>   \n                            <h1>\n                            {context.stockData.symbol}\n                            </h1>\n                            <h5> { context.stockData.companyName } </h5>\n                        </div>\n                        <div className={styles.info}>\n                            <h3>\n                                <div className={context.stockData.iexRealtimePrice < context.stockData.open ? styles.downPrice : ''}> \n                                    ${context.stockData.iexRealtimePrice !== null && context.stockData.iexRealtimePrice !== 0 ? context.stockData.iexRealtimePrice : context.stockData.latestPrice}\n                                </div>\n                            </h3>\n                            <h5>{ context.stockData.primaryExchange }</h5>\n                        </div>\n                        <div className={styles.openClosePrice}>\n                            { context.stockData.open !== null ? \n                            <h5>Open: ${ context.stockData.open}</h5> : \n                            ''}\n                            { context.stockData.close !== null ? \n                            <h5>Close: ${ context.stockData.close}</h5> : \n                            ''}\n                        </div>\n                        <div className={styles.stockNewsBox}>\n                            <h3>News</h3>\n                            <h4>{ context.stockNews.title} </h4>\n                            <p>{ context.stockNews.description}</p>\n                    </div>\n                </div>\n                )}\n            </Context.Consumer>\n    )\n}\n\nexport default Stock\n","import React, { Component } from 'react'\nimport styles from './Home.module.css'\n\nclass Home extends Component {\n    // Set initial states\n    state = {\n        data: [],\n        news: [],\n        isLoaded: false,\n    }\n    componentDidMount(){\n        // Fetches the stock info from iex cloud API\n        fetch(`https://cloud.iexapis.com/stable/stock/${this.props.stockName}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                // Sets data into state\n                this.setState({\n                    data: result,\n                    isLoaded: true\n                })\n            });\n        // Fetches data from News Api\n        fetch(`https://newsapi.org/v2/everything?q=${this.props.stockName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                // Sets data into state\n                this.setState({\n                    news: {\n                        title: result.articles[0].title,\n                        description: result.articles[0].description\n                    }\n                })\n            });\n                // Sets initial background color\n                document.body.style.backgroundColor = \"#f67280\";\n    }\n\n    componentWillUnmount(){\n        // Changes background to null when the component unmounts\n        document.body.style.backgroundColor = null;\n    }\n\nrender(){\n\n        return (\n            \n            <div>\n                <div className={styles.infoBox}>\n                    <div className={this.state.isLoaded === true ? styles.title : ''}>\n                        <h3>{this.state.data.symbol}</h3>\n                    </div>\n                    <h4>\n                        <div className={this.state.isLoaded === true ? styles.info: ''}>\n                            <p>{this.state.data.companyName}</p>\n                            <p>{this.state.isLoaded === true ? `$${this.state.data.latestPrice}` : ''}</p>\n                            <p>{this.state.data.primaryExchange}</p>\n                        </div>\n                    </h4>\n                    <div className={this.state.isLoaded === true ? styles.news : ''}>\n                        <h1>{this.state.news.title}</h1>\n                        <p>{this.state.news.description}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n \nexport default Home","import React from 'react';\nimport './App.css';\nimport styles from './App.module.css'\nimport Stock from './components/Stock'\nimport Home from './components/Home'\nimport Context from './Context/Context'\n\nclass App extends React.Component {\n// Set default states\n  state = {\n    stockData: [],\n    query: '',\n    stockNews: [],\n    isSearching: false,\n  }\n  // Function to set text entered into the search box to the query state\n  onChange = (e) => this.setState({ query: e.target.value });\n  search = evt => {\n    // Checks if \"enter\" button has been pressed from search box\n    if( evt.key === \"Enter\"){\n      // Fetches stock data from Iexcloud API using the query state\n      fetch(`https://cloud.iexapis.com/stable/stock/${this.state.query}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          // Sets the stockdata into state\n          this.setState({\n            stockData: result,\n            isSearching: true,\n          })\n          // Fetches news data from newsapi.org based on the company name\n          fetch(`https://newsapi.org/v2/everything?q=${this.state.stockData.companyName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n              // sets the news data into state\n              this.setState({\n                // news data object\n                stockNews: {\n                  title: result.articles[0].title, \n                  description: result.articles[0].description\n            }\n          })\n        });\n      });\n    }\n  }\n  render(){\n    return (\n      <Context.Provider value={{\n        stockData: this.state.stockData,\n        query: this.state.query,\n        stockNews: this.state.stockNews,\n        isSearching: this.state.isSearching\n      }}>\n          <div className={this.state.isSearching === false ? styles.AppHome : styles.App}>\n            <div className={styles.searchBox}>\n            <input \n              type=\"text\"\n              className={styles.searchBar}\n              placeholder=\"Search for a stock symbol... ex: AAPL, TSLA, FB...\"\n              value={this.state.query}\n              onKeyPress={this.search}\n              onChange={this.onChange}\n            />\n            </div>\n            {//  Detemines whether or not to mount the Home or Stock components   \n            }\n            {this.state.isSearching === false ? \n            <div>\n              <Home stockName=\"goog\" />\n              <Home stockName=\"fb\" />\n              <Home stockName=\"snap\" /> \n            </div>\n            : ''}\n            {this.state.isSearching === true ? \n            <Stock /> \n            : ''}\n          </div>\n        </Context.Provider>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}