{"version":3,"sources":["components/Stock.module.css","components/Home.module.css","components/Stock.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stock","className","styles","title","this","props","data","symbol","companyName","info","iexRealtimePrice","open","downPrice","latestPrice","primaryExchange","openClosePrice","close","stockNewsBox","news","description","Component","Home","state","fetch","stockName","process","then","res","json","result","setState","articles","document","body","style","backgroundColor","infoBox","App","stockData","query","stockNews","isSearching","isLoading","onChange","e","target","value","search","evt","key","type","placeholder","onKeyPress","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a550d08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Stock_title__2Yh_U\",\"info\":\"Stock_info__1mza7\",\"downPrice\":\"Stock_downPrice__2jF9G\",\"openClosePrice\":\"Stock_openClosePrice__39caN\",\"stockNewsBox\":\"Stock_stockNewsBox__3qGbc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBox\":\"Home_infoBox__3oj_7\",\"title\":\"Home_title__1ks5w\",\"info\":\"Home_info__2unDC\",\"news\":\"Home_news__3oYsE\"};","import React, { Component } from 'react'\nimport styles from './Stock.module.css'\nexport class Stock extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className={styles.title}>   \n                        <h1>\n                        {this.props.data.symbol}\n                        </h1>\n                        <h5> { this.props.data.companyName } </h5>\n                    </div>\n                    <div className={styles.info}>\n                        <h3>\n                            <div className={this.props.data.iexRealtimePrice < this.props.data.open ? styles.downPrice : ''}> \n                                ${this.props.data.iexRealtimePrice !== 0 ? this.props.data.iexRealtimePrice : this.props.data.latestPrice}\n                            </div>\n                        </h3>\n                        <h5>{ this.props.data.primaryExchange }</h5>\n                    </div>\n                    <div className={styles.openClosePrice}>\n                        { this.props.data.open !== null ? \n                        <h5>Open: ${ this.props.data.open}</h5> : \n                        ''}\n                        { this.props.data.close !== null ? \n                        <h5>Close: ${ this.props.data.close}</h5> : \n                        ''}\n                    </div>\n                    <div className={styles.stockNewsBox}>\n                        <h3>News</h3>\n                        <h4>{ this.props.news.title} </h4>\n                        <p>{ this.props.news.description}</p>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Stock\n","import React, { Component } from 'react'\nimport styles from './Home.module.css'\n\nclass Home extends Component {\n    state = {\n        data: [],\n        news: []\n    }\n    componentDidMount(){\n        fetch(`https://cloud.iexapis.com/stable/stock/${this.props.stockName}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    data: result\n                })\n            });\n        fetch(`https://newsapi.org/v2/everything?q=${this.props.stockName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    news: {\n                        title: result.articles[0].title,\n                        description: result.articles[0].description\n                    }\n                })\n            });\n                document.body.style.backgroundColor = \"#f67280\";\n    }\n\n    componentWillUnmount(){\n        document.body.style.backgroundColor = null;\n    }\nrender(){\n        return (\n            <div>\n                <div className={styles.infoBox}>\n                    <div className={styles.title}>\n                        <h3>{this.state.data.symbol}</h3>\n                    </div>\n                    <h4>\n                        <div className={styles.info}>\n                            <p>{this.state.data.companyName}</p>\n                            <p>${this.state.data.latestPrice}</p>\n                            <p>{this.state.data.primaryExchange}</p>\n                        </div>\n                    </h4>\n                    <div className={styles.news}>\n                        <h1>{this.state.news.title}</h1>\n                        <p>{this.state.news.description}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n \nexport default Home","import React, { useState} from 'react';\nimport './App.css';\nimport Stock from './components/Stock'\nimport Home from './components/Home'\n\nclass App extends React.Component {\n// Set default states\n  state = {\n    stockData: [],\n    query: '',\n    stockNews: [],\n    isSearching: false,\n    isLoading: false,\n  }\n  // Function to set text entered into the search box to the query state\n  onChange = (e) => this.setState({ query: e.target.value });\n  search = evt => {\n    // Checks if \"enter\" button has been pressed from search box\n    if( evt.key === \"Enter\"){\n      // Fetches stock data from Iexcloud API using the query state\n      fetch(`https://cloud.iexapis.com/stable/stock/${this.state.query}/quote?token=${process.env.REACT_APP_STOCK_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          // Sets the stockdata into state\n          this.setState({\n            isLoading: true,\n            stockData: result,\n            isSearching: true,\n          })\n          // Fetches news data from newsapi.org based on the company name\n          fetch(`https://newsapi.org/v2/everything?q=${this.state.stockData.companyName}&apiKey=${process.env.REACT_APP_NEWS_KEY}`)\n            .then(res => res.json())\n            .then(result => {\n              // sets the news data into state\n              this.setState({\n                // news data object\n                stockNews: {\n                  title: result.articles[0].title, \n                  description: result.articles[0].description\n              }\n              })\n            });\n        });\n    }\n  }\n  render(){\n    return (\n      // class changes depending on weather the user is searching or not\n      <div className={this.state.isSearching === false ? \"App home\" : \"App\"}>\n          <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search for a stock symbol... ex: AAPL, TSLA, FB...\"\n            value={this.state.query}\n            onKeyPress={this.search}\n            onChange={this.onChange}\n          />\n          </div>\n          {this.state.isSearching === false ? \n          <div>\n            <Home stockName=\"goog\" />\n            <Home stockName=\"fb\" />\n            <Home stockName=\"snap\" /> \n          </div>\n          : ''}\n          {this.state.isSearching === true ? \n          <Stock data={this.state.stockData} news={this.state.stockNews}/> \n          : ''}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}